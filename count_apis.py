#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import print_function
import sys
import sqlite3
from collections import defaultdict

sql_cmd = "select * from calls"

broadcast_key = "Landroid/content/BroadcastReceiver"
pkgmanager_key = "Landroid/content/pm/PackageManager"
smsmanager_key = "Landroid/telephony/SmsManager"
telmanager_key = "Landroid/telephony/TelephonyManager"
dexloader_key = "Ldalvik/system/DexClassLoader"
connmanager_key = "Landroid/net/ConnectivityManager"
wifimanager_key = "Landroid/net/wifi/WifiManager"
supplicant_key = "Landroid/net/wifi/SupplicantState"

check_list = [
    broadcast_key, pkgmanager_key, smsmanager_key, telmanager_key,
    dexloader_key, connmanager_key, wifimanager_key, supplicant_key
]


def check_data(row, cnt_apis, data_apis):
    cls = str(row[4])
    method = str(row[5])
    for key in check_list:
        if cls.startswith(key):
            cnt_apis[key] += 1
            data_apis[key].append(key + "/" + method)


def count_apis(sqlite_file):
    cnt_apis = defaultdict(int)
    data_apis = defaultdict(list)
    total_calls = 0
    with sqlite3.connect(sqlite_file) as sqlite_conn:
        cursor = sqlite_conn.cursor()
        cursor.execute(sql_cmd)
        values = cursor.fetchall()
        total_calls = len(values)
        for row in values:
            check_data(row, cnt_apis, data_apis)
    return (cnt_apis, data_apis, total_calls)


def print_result(cnt_apis, data_apis, total_calls):
    print("Total Calls: %d\n\n" % total_calls)
    for (k, v) in cnt_apis.items():
        print("%s: %d" % (k, v))
    print('')
    for (k, v) in data_apis.items():
        print("%s: %s" % (k, v))


# print_result(*count_apis(sys.argv[1]))
