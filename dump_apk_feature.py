#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import print_function
from os import path
import sys
import json
import subprocess
from generate_apkdata import analyze_apk
from dump_api_feature import generate_all_api_feature
from count_permissions import permission_list

API_KEY = [
    'Landroid/content/BroadcastReceiver/<init>',
    'Landroid/content/pm/PackageManager/checkPermission',
    'Landroid/content/pm/PackageManager/getActivityInfo',
    'Landroid/content/pm/PackageManager/getApplicationInfo',
    'Landroid/content/pm/PackageManager/getInstalledPackages',
    'Landroid/content/pm/PackageManager/getLaunchIntentForPackage',
    'Landroid/content/pm/PackageManager/getPackageArchiveInfo',
    'Landroid/content/pm/PackageManager/getPackageInfo',
    'Landroid/content/pm/PackageManager/printStackTrace',
    'Landroid/content/pm/PackageManager/queryIntentActivities',
    'Landroid/ppcontent/pm/PackageManager/resolveActivity',
    'Landroid/net/ConnectivityManager/getActiveNetworkInfo',
    'Landroid/net/ConnectivityManager/getAllNetworkInfo',
    'Landroid/net/ConnectivityManager/getNetworkInfo',
    'Landroid/net/wifi/WifiManager/getConnectionInfo',
    'Landroid/telephony/SmsManager/divideMessage',
    'Landroid/telephony/SmsManager/getDefault',
    'Landroid/telephony/SmsManager/sendTextMessage',
    'Landroid/telephony/TelephonyManager/getCellLocation',
    'Landroid/telephony/TelephonyManager/getDeviceId',
    'Landroid/telephony/TelephonyManager/getLine1Number',
    'Landroid/telephony/TelephonyManager/getNetworkCountryIso',
    'Landroid/telephony/TelephonyManager/getNetworkOperator',
    'Landroid/telephony/TelephonyManager/getNetworkOperatorName',
    'Landroid/telephony/TelephonyManager/getNetworkType',
    'Landroid/telephony/TelephonyManager/getPhoneType',
    'Landroid/telephony/TelephonyManager/getSimCountryIso',
    'Landroid/telephony/TelephonyManager/getSimOperator',
    'Landroid/telephony/TelephonyManager/getSimOperatorName',
    'Landroid/telephony/TelephonyManager/getSimSerialNumber',
    'Landroid/telephony/TelephonyManager/getSubscriberId',
    'Ldalvik/system/DexClassLoader/<init>',
    'Ldalvik/system/DexClassLoader/loadClass'
]


def get_apk_feature_json(filename):
    if not path.exists(filename):
        print("%s not exists." % filename, file=sys.stderr)
        sys.exit(1)
    feature_vec = [0] * (len(API_KEY) + len(permission_list))
    with open(filename, 'r') as fr:
        data = json.load(fr)
        for idx in range(len(permission_list)):
            if permission_list[idx] in data["permissions"]:
                feature_vec[idx] = 1
        apis = []
        for api_list in data["data_apis"].values():
            apis.extend(api_list)
        apis = set(apis)

        for idx in range(len(API_KEY)):
            if API_KEY[idx] in apis:
                feature_vec[len(permission_list) + idx] = 1
    return feature_vec


def get_apk_feature_apk(filename):
    if not path.exists(filename):
        print("%s not exists." % filename, file=sys.stderr)
        sys.exit(1)
    analyze_apk(filename)
    filename = path.split(filename)[1]
    feature_vec = get_apk_feature_json(filename[:-4] + ".txt")
    if subprocess.call(["rm", "-f", filename[:-4] + ".txt"]):
        print("error occurred.", file=sys.stderr)
        exit(1)
    return feature_vec
