#!/usr/bin/env python
# -*- coding: utf-8 -*-
try:
    import xml.etree.cElementTree as ET
except ImportError:
    import xml.etree.ElementTree as ET
from collections import defaultdict

networK_state_key = "ACCESS_NETWORK_STATE"
wifi_state_key = "ACCESS_WIFI_STATE"
call_phone_key = "CALL_PHONE"
change_network_key = "CHANGE_NETWORK_STATE"
get_accounts_key = "GET_ACCOUNTS"
get_accounts_prior_key = "GET_ACCOUNTS_PRIVILEGED"
internet_key = "INTERNET"
install_pkg_key = "INSTALL_PACKAGES"
read_contacts_key = "READ_CONTACTS"
read_logs_key = "READ_LOGS"
read_phone_state_key = "READ_PHONE_STATE"
read_sms_key = "READ_SMS"
receive_boot_key = "RECEIVE_BOOT_COMPLETED"
restart_pkg_key = "RESTART_PACKAGES"
receive_sms_key = "RECEIVE_SMS"
send_sms_key = "SEND_SMS"

permission_list = [
    networK_state_key, wifi_state_key, call_phone_key, change_network_key,
    get_accounts_key, get_accounts_prior_key, internet_key, install_pkg_key,
    read_contacts_key, read_logs_key, read_phone_state_key, read_sms_key,
    receive_boot_key, restart_pkg_key, receive_sms_key, send_sms_key
]


def check_permission(permission_file):
    tree = ET.parse(permission_file)
    root = tree.getroot()

    permission_map = defaultdict(bool)
    for node in root.findall('uses-permission'):
        permissions = node.attrib.values()
        for permission in permissions:
            for permission_key in permission_list:
                if permission.endswith(permission_key):
                    permission_map[permission_key] = True
    return permission_map


def print_permissions(permission_map):
    for k in permission_map.keys():
        print(k)


# print_permissions(
#     check_permission(
#         "/Users/Zach/Desktop/Zach/Lab/apktook_demo/test1/AndroidManifest.xml"))
