#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import print_function
import json
import os
from os import path
import sys

from count_permissions import permission_list


def generate_all_api_feature(dirname):
    if not path.exists(dirname):
        print("directory not exists.", file=sys.stderr)
    files = os.listdir(dirname)
    ret = []
    for fname in files:
        filename = path.join(dirname, fname)
        with open(filename, 'r') as fr:
            data = json.load(fr)
            for api_list in data["data_apis"].values():
                ret.extend(api_list)
    return sorted(list(set(ret)))


def generate_feature_vec():
    dirname = "/Users/Zach/Desktop/Zach/APK_TestData/malwares"
    dirname2 = "/Users/Zach/Desktop/Zach/APK_TestData/non-malwares"
    malware_feature_vec = []
    nonmal_feature_vec = []

    api_list = generate_all_api_feature(dirname)

    for file_cnt in range(1, 86):
        filename = path.join(dirname, "test" + str(file_cnt) + ".txt")
        filename2 = path.join(dirname2, "nonmal-test" + str(file_cnt) + ".txt")
        feature_vec = [0] * (len(permission_list) + len(api_list))
        nonmal_vec = [0] * (len(permission_list) + len(api_list))

        with open(filename, 'r') as fr:
            data = json.load(fr)
            for i in range(0, len(permission_list)):
                if permission_list[i] in data['permissions']:
                    feature_vec[i] = 1
            for data_apis in data["data_apis"].values():
                for i in range(len(api_list)):
                    if api_list[i] in data_apis:
                        feature_vec[i + len(permission_list)] = 1
        malware_feature_vec.append(feature_vec)
        print(filename2)
        with open(filename2, 'r') as fr:
            data = json.load(fr)
            for i in range(0, len(permission_list)):
                if permission_list[i] in data['permissions']:
                    nonmal_vec[i] = 1
            for data_apis in data["data_apis"].values():
                for i in range(len(api_list)):
                    if api_list[i] in data_apis:
                        nonmal_vec[i + len(permission_list)] = 1
        nonmal_feature_vec.append(nonmal_vec)

    return malware_feature_vec, nonmal_feature_vec

# malwares, non_malwares = generate_feature_vec()
# with open("malware_data.txt", "w") as fp:
#     data = json.dumps(malwares)
#     fp.write(data)

# with open('non_malwares.txt', 'w') as fp:
#     data = json.dumps(non_malwares)
#     fp.write(data)
